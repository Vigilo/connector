# vim: set fileencoding=utf-8 sw=4 ts=4 et :

[bus]
# Le trafic lié au bus XMPP doit-il être enregistré dans les logs ?
log_traffic = True

# Nom ou adresse IP du serveur XMPP à utiliser.
host = vigilo-dev

# Nom du service de publication pour les messages.
service = pubsub.localhost

# Nom d'utilisateur à utiliser pour se connecter au bus.
jid = connector@localhost

# Mot de passe à utiliser
password = connector

# Liste des noms des topics à surveiller, séparés par des virgules.
# Si la liste est vide, mettre uniquement une virgule.
# Pas utilisé par le connecteur-nagios.
watched_topics = ,

# Liste des noms des topics à créer, séparés par des virgules.
# Si la liste est vide, mettre uniquement une virgule.
owned_topics = /home/localhost/connector/bus,


[connector]
# Emplacement du fichier de sauvegarde local en cas de pannes.
backup_file = :memory:

# Nom de la table qui stocke les messages en attente à destination du bus.
backup_table_to_bus = tobus

# Nom de la table qui stocke les messages en attente en provenance du bus.
backup_table_from_bus = frombus

# Emplacement du socket utilisé pour recevoir des messages.
listen_unix = /tmp/connector-in.sock

# Emplacement du socket utilisé pour envoyer des messages.
send_unix = /tmp/connector-out.sock


[publications]
# Noms des messages XML traités avec pour chaque type de message
# le nom du nœud XMPP sur lesquel les messages de ce type sont envoyés.
perf = /home/localhost/connector/bus
state = /home/localhost/connector/bus
event = /home/localhost/connector/bus



[loggers]
keys=root,twisted

[handlers]
keys=syslog,console

[formatters]
keys=consoleFormatter,syslogFormatter

[logger_root]
level=DEBUG
handlers=syslog,console
 
[logger_twisted]
level=DEBUG
qualname=twisted
propagate=0
handlers=syslog,console

[handler_console]
class=StreamHandler
level=DEBUG
formatter=consoleFormatter
args=(sys.stdout,)

[handler_syslog]
class=handlers.SysLogHandler
level=DEBUG
formatter=syslogFormatter
args='/dev/log', 'daemon'

[formatter_consoleFormatter]
format=[%(created)f] %(levelname)s::%(name)s::%(message)s
datefmt=

[formatter_syslogFormatter]
format=%(processName)s[%(process)d]: %(levelname)s::%(name)s::%(message)s
datefmt=
