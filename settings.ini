[bus]
# Nom ou adresse IP du serveur XMPP à utiliser.
host = vigilo-bus.example.com

# Nom du service de publication pour les messages.
service = pubsub.localhost

# Nom d'utilisateur à utiliser pour se connecter au bus.
jid = connector@localhost

# Mot de passe associé au jid donné.
password = connector

# Indique si un chiffrement de la connexion est obligatoire (True)
# ou simplement préféré (False). Dans tous les cas, une connexion
# TLS sera créée lorsque c'est possible.
require_tls = False

# Liste des noms des topics auxquels le connecteur est abonné,
# séparés par des virgules.
# Si la liste est vide, mettre uniquement une virgule.
subscriptions = /vigilo/command

# Le trafic lié au bus XMPP doit-il être enregistré dans les logs ?
log_traffic = False

#-----------------------------------------
# Réglages pour un grand volume de données

# Nombre maximal de message simultanés. Dans eJabberd, cela doit correspondre
# au paramètre "max_fsm_queue" du fichier ejabberd.cfg
max_send_simult = 1000

# Doit-on envoyer plusieurs messages de performance dans un même message XMPP ?
#  * avantage : augmente très largement le débit maximum
#  * inconvénient : si les messages de performance ne sont pas générés assez
#    vite, leur relai peut être retardé (on attend que le wagon soit plein)
# Le nombre de messages de performance à stocker dans le même message XMPP ne
# doit pas dépasser la taille limite autorisée par le bus (dans eJabberd, voir
# l'option "max_stanza_size", par défaut à 64K, ce qui nous limite
# théoriquement à environ 500). Testé à 10.
batch_send_perf = 1


[connector]
# Emplacement du fichier de sauvegarde local en cas de pannes.
backup_file = /var/lib/vigilo/connector/backup.sqlite

# Nom de la table qui stocke les messages en attente à destination du bus.
backup_table_to_bus = tobus

# Nom de la table qui stocke les messages en attente en provenance du bus.
backup_table_from_bus = frombus


[publications]
# Noms des messages XML traités avec pour chaque type de message
# le nom du nœud XMPP sur lesquel les messages de ce type sont envoyés.
perf = /vigilo/perf
state = /vigilo/state
event = /vigilo/event
command = /vigilo/command


[loggers]
keys=root,twisted

[handlers]
keys=syslog,console

[formatters]
keys=consoleFormatter,syslogFormatter

[logger_root]
level=INFO
handlers=syslog,console

[logger_twisted]
level=WARNING
qualname=twisted
propagate=0
handlers=syslog,console

[handler_console]
class=StreamHandler
level=DEBUG
formatter=consoleFormatter
args=(sys.stdout,)

[handler_syslog]
class=handlers.SysLogHandler
level=DEBUG
formatter=syslogFormatter
args='/dev/log', 'daemon'

[formatter_consoleFormatter]
format=[%(created)f] %(levelname)s::%(name)s::%(message)s
datefmt=
class=vigilo.common.logging.VigiloFormatter

[formatter_syslogFormatter]
format=%(processName)s[%(process)d]: %(levelname)s::%(name)s::%(message)s
datefmt=
class=vigilo.common.logging.VigiloFormatter
